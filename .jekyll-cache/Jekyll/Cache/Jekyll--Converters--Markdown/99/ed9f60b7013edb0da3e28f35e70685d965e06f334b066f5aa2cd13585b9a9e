I"y<p>Rsync, which stands for “remote sync”, is a remote and local file synchronization tool.
It uses an algorithm that minimizes the amount of data copied by only moving the portions of files that have changed.
So, you can use <code class="language-plaintext highlighter-rouge">rsync</code> to handle this case.</p>

<p>Rsync is a very flexible network-enabled syncing tool.
It can also refer to the network protocol developed to utilize this tool.
When we reference rsync in this guide, we are mainly referring to the utility, and not the protocol.</p>

<p>Due to its ubiquity on Linux and Unix-like systems and its popularity as a tool for system scripts,
it is included on most Linux distributions by default.</p>

<p>For example:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rsync <span class="nt">-a</span> <span class="nt">--exclude</span> <span class="s2">"*.pyc"</span> /path/to/origin-directory/<span class="k">*</span> /path/to/destination/
</code></pre></div></div>

<p>And then, add your command into bash file:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="nv">ORIGIN</span><span class="o">=</span><span class="s2">"/home/yourusername/projects/*"</span>
<span class="nv">DESTINATION</span><span class="o">=</span><span class="s2">"/media/yourusername/Elements/jobs/projects/"</span>

<span class="k">if</span> <span class="o">[</span> <span class="nt">-d</span> <span class="nv">$DESTINATION</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span>rsync <span class="nt">-a</span> <span class="nt">--exclude</span> <span class="s2">"*.pyc"</span> <span class="nv">$ORIGIN</span> <span class="nv">$DESTINATION</span><span class="p">;</span>
    <span class="nb">echo</span> <span class="s2">"Updated at:"</span> <span class="si">$(</span><span class="nb">date</span><span class="si">)</span><span class="p">;</span>
<span class="k">else
    </span><span class="nb">echo</span> <span class="s2">"Path </span><span class="nv">$DESTINATION</span><span class="s2"> not found."</span><span class="p">;</span>
    <span class="nb">echo</span> <span class="s2">"Not updated at:"</span> <span class="si">$(</span><span class="nb">date</span><span class="si">)</span><span class="p">;</span>
<span class="k">fi</span>
</code></pre></div></div>

<p>Change mode for your bash file:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ chmod +x autosync.sh
</code></pre></div></div>

<p>Don’t miss to add into cronjobs</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ crontab -e
</code></pre></div></div>

<p>then, in your editor:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Select shell mode
SHELL=/bin/bash


# sync the folders for every hours, for more: https://crontab.guru/every-1-hour
0 * * * * /home/yourusername/tools/autosync.sh &gt; /yourusername/tools/autosync.log 2&gt;&amp;1
</code></pre></div></div>
:ET