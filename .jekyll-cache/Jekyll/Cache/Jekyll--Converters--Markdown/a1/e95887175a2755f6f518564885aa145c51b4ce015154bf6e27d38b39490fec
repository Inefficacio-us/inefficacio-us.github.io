I"4<p>For example I have this 3 fields as <code class="language-plaintext highlighter-rouge">question_set</code>, <code class="language-plaintext highlighter-rouge">question</code> and <code class="language-plaintext highlighter-rouge">folder</code>.
I need to assign all of this fields into <code class="language-plaintext highlighter-rouge">raw_id_fields</code> inside the <code class="language-plaintext highlighter-rouge">admin.ModelAdmin</code> without add manually per-single fields.</p>

<p>the basic way to enable raw id fields inside the <code class="language-plaintext highlighter-rouge">admin.ModelAdmin</code> look like this;</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">@</span><span class="n">admin</span><span class="p">.</span><span class="n">register</span><span class="p">(</span><span class="n">QuestionList</span><span class="p">,</span> <span class="n">site</span><span class="o">=</span><span class="n">admin_site</span><span class="p">)</span>
<span class="k">class</span> <span class="nc">QuestionListAdmin</span><span class="p">(</span><span class="n">admin</span><span class="p">.</span><span class="n">ModelAdmin</span><span class="p">):</span>
    <span class="n">raw_id_fields</span> <span class="o">=</span> <span class="p">(</span><span class="s">'question_set'</span><span class="p">,</span> <span class="s">'question'</span><span class="p">,</span> <span class="s">'folder'</span><span class="p">)</span>    <span class="c1"># manually
</span></code></pre></div></div>

<p>But, can I setup all that <code class="language-plaintext highlighter-rouge">OneToOneField</code> and <code class="language-plaintext highlighter-rouge">ForeignKey</code> fields automatically into <code class="language-plaintext highlighter-rouge">raw_id_fields</code> without add it manually?
such as applying the class mixin? sure can, to do it you can inspect the model,
and search through the fields for instances of <code class="language-plaintext highlighter-rouge">ForeignKey</code>,
and add the name to the tuple, for example with:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">DefaultAdminMixin</span><span class="p">:</span>
    <span class="s">"""
    class mixin to setup default `raw_id_fields` and `search_fields`.
    """</span>
    <span class="n">raw_id_fields</span> <span class="o">=</span> <span class="p">()</span>
    <span class="n">search_fields</span> <span class="o">=</span> <span class="p">()</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">admin_site</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">raw_id_fields</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">setup_raw_id_fields</span><span class="p">(</span><span class="n">model</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">search_fields</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">setup_search_fields</span><span class="p">(</span><span class="n">model</span><span class="p">)</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">admin_site</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">setup_raw_id_fields</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">model</span><span class="p">):</span>
        <span class="k">return</span> <span class="nb">tuple</span><span class="p">(</span>
            <span class="n">f</span><span class="p">.</span><span class="n">name</span>
            <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">model</span><span class="p">.</span><span class="n">_meta</span><span class="p">.</span><span class="n">get_fields</span><span class="p">()</span>
            <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">ForeignKey</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">OneToOneField</span><span class="p">)</span>
        <span class="p">)</span>

    <span class="k">def</span> <span class="nf">setup_search_fields</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">model</span><span class="p">):</span>
        <span class="k">return</span> <span class="nb">tuple</span><span class="p">(</span>
            <span class="n">f</span><span class="p">.</span><span class="n">name</span>
            <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">model</span><span class="p">.</span><span class="n">_meta</span><span class="p">.</span><span class="n">get_fields</span><span class="p">()</span>
            <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">CharField</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">TextField</span><span class="p">)</span>
        <span class="p">)</span>
</code></pre></div></div>

<p>A <code class="language-plaintext highlighter-rouge">OneToOneField</code> is a subclass of a <code class="language-plaintext highlighter-rouge">ForeignKey</code>, so there is no need to make search for a <code class="language-plaintext highlighter-rouge">OneToOneField</code>.
and to implement it, you can follow this below example;</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">@</span><span class="n">admin</span><span class="p">.</span><span class="n">register</span><span class="p">(</span><span class="n">QuestionList</span><span class="p">,</span> <span class="n">site</span><span class="o">=</span><span class="n">admin_site</span><span class="p">)</span>
<span class="k">class</span> <span class="nc">QuestionListAdmin</span><span class="p">(</span><span class="n">DefaultAdminMixin</span><span class="p">,</span> <span class="n">admin</span><span class="p">.</span><span class="n">ModelAdmin</span><span class="p">):</span>
    <span class="k">pass</span>
</code></pre></div></div>
:ET